#!@GUILE@ \
--no-auto-compile -e main -s
!#

;; bin/guest --- guest cli -*- coding: utf8 -*-

(use-modules (ice-9 match)
	     (ice-9 regex)
	     (ice-9 format)
	     (srfi srfi-19)
	     (guest ui)
	     (guest utils))

;; This code of 'config-lookup' (modified a bit) is taken from
;; <http://git.savannah.gnu.org/cgit/guix.git/tree/scripts/guix.in>.
(define (config-lookup variable)
  "Return the value of the compile-time VARIABLE.
Finding such values is not trivial, as they may be recursive.  For
example, default value of 'libdir' is '${exec_prefix}/lib', so we need
to find out the value of 'exec_prefix' at first, etc."
  (define config
    '(("prefix"         . "@prefix@")
      ("exec_prefix"    . "@exec_prefix@")
      ("guilemoduledir" . "@guilemoduledir@")
      ("guileobjectdir" . "@guileobjectdir@")
      ("version" . "@HVERSION@")
      ("author" . "@AUTHOR@")
      ("copyright" . "@COPYRIGHT@")
      ("license" . "@LICENSE@")))

  (define var-ref-regexp (make-regexp "\\$\\{([a-z_]+)\\}"))

  (define (expand-var-ref match)
    (config-lookup (match:substring match 1)))

  (define (expand str)
    (regexp-substitute/global #f var-ref-regexp str
			      'pre expand-var-ref 'post))

  (define (lookup name)
    (expand (assoc-ref config name)))

  (lookup variable))


(define* (main #:optional (args (command-line)))
  "Entry point for the command-line application. ARGS should be a
normal command-line list."

  (unless (getenv "GUEST_UNINSTALLED")
    (let ((mod-dir (config-lookup "guilemoduledir"))
	  (obj-dir (config-lookup "guileobjectdir")))
      (push! mod-dir %load-path)
      (push! (string-append mod-dir "/zephyr") %load-path)
      (push! obj-dir %load-compiled-path)
      (push! (string-append obj-dir "/zephyr") %load-compiled-path)))

  (apply guest-main args))
